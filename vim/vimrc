execute pathogen#infect()
execute pathogen#helptags()

set nocompatible
filetype plugin indent on
syntax enable

" Colors
set bg=dark
colorscheme solarized
" set t_Co=256

" Indentation
set autoindent                  " Start new lines on the same indent level as the current line
set expandtab                   " Insert the appropriate number of spaces instead of tabs
set shiftround                  " Round indent to multiple of 'shiftwidth'
set shiftwidth=4                " >> indents 4 columns; << unindents 4 columns
set softtabstop=4               " Insert/delete 4 spaces when hitting TAB/BACKSPACE
set tabstop=4                   " A hard TAB displays as 4 columns

" Searching
set hlsearch                    " Hightlight matches
" set ignorecase                  " Case-insensitive searching
set incsearch                   " Start searching as soon as characters are entered
" set smartcase                   " Case-sensitive searching only when including capitcals. Requries 'ignorecase'

" Interface
set cursorline                  " Highlight the current line
" set report=0                    " Always report how many lines are changed
set scrolloff=4                 " Keep cursor 4 lines away form window edges
set number                      " Display line numbers
set showtabline=2               " Always show the tabline
set laststatus=2                " Always display the status line

" File navigation
set path+=**                    " Recursive search when using :find
set wildmenu                    " Extend tab-completion with interactive menu
set wildmode=list:full

" Misc
set autoread
" set belloff=all
set directory=~/.vim/swap       " Specify where swap files are placed
set lazyredraw
" set linebreak
set splitbelow                  " New window is placed below the current one
set splitright                  " New window is placed to the right of the current one
" set ttyfast                     " Better terminal performance
set complete-=t                 " Exclude tags for quicker autocompletion

" Autocommands ===============================================================

" Remove trailing whitespaces when saving
autocmd BufWritePre * :%s/\s\+$//ge

" Auto-format javascript files with Prettier
autocmd BufWritePre *.ts,*.vue :Prettier
autocmd BufWritePre *.ts setfiletype typescript

" reload when entering the buffer or gaining focus
au FocusGained,BufEnter * :silent! !

" Two space indent for certain file types
autocmd FileType javascript,typescript,yaml,html :setlocal sw=2 ts=2 sts=2

" Use Markdown syntax highlighting for .md-files
autocmd BufNewFile,BufRead *.md set syntax=markdown

" Key bindings ===============================================================

" TODO Figure out if I need this
" Stay on the current word when using * to search
" nnoremap * *N

" TODO Figure out if I need these
" move vertically over wrapped lines
" nnoremap j gj
" nnoremap k gk

" Bind kj to escape
inoremap kj <Esc>

" TODO Figure out if I need these
" move to beginning/end of line
" TODO Lookup what these overwrite
" noremap H ^
" noremap L $

" TODO Figure out if I need these
" Easier split navigation
" TODO Loopkup what these overwrite
" nnoremap <C-H> <C-W><C-H>
" nnoremap <C-J> <C-W><C-J>
" nnoremap <C-K> <C-W><C-K>
" nnoremap <C-L> <C-W><C-L>

" TODO Figure out if I need these
" TODO Loopkup what these overwrite
" map <C-n> :tabn<CR>
" map <C-p> :tabp<CR>

" Keep selection after changing indent level
" vnoremap > ><CR>gv
" vnoremap < <<CR>gv

" Leader bindings ============================================================

let mapleader=" "

nnoremap <leader>f :FZF<cr>
nnoremap <leader>t :terminal++close<cr>

" Easier yank to clipboard
map <leader>y "+y

" Switch between current and last file
" nnoremap <C-m> <C-^>
nnoremap <leader><leader> <C-^>

" Clear search highlights
nnoremap <leader><CR> :nohlsearch<cr>

" Edit vimrc
nnoremap <leader>ve :e $MYVIMRC<CR>

" Reload vimrc
nnoremap <leader>vr :source $MYVIMRC<CR>

" Snippets
" nnoremap <leader>html :-1read ~/.vim/snippets/skeleton.html<cr>/INS<cr>ciw

" Abbreviations
" TODO Find a way to make settings like this apply only to certain filetypes
" ab con console.log()<left>
" ab dprint println!("{:?}",

" Plugin settings ============================================================

let $FZF_DEFAULT_COMMAND = 'fd --type f --follow --exclude .git'

let g:netrw_banner=0 " disable annoying banner
let g:netrw_altv=1 " opens splits to the right
let g:netrw_liststyle=3 " tree view

let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

" let g:rustfmt_autosave = 1

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 0
