execute pathogen#infect()
execute pathogen#helptags()

set nocompatible
filetype plugin indent on
syntax on

set t_Co=256

colorscheme jellybeans
set bg=dark

set autoindent                  " Start new lines on the same indent level as the current line
set cursorline                  " Highlight the current line
set directory=~/.vim/swap       " Specify where swap files are placed
set expandtab                   " Insert the appropriate number of spaces instead of tabs
set hlsearch                    " Hightlight matches
set incsearch                   " Start searchin as soon as characters are entered
set laststatus=2                " Always display the status line
set lbr
set lazyredraw
set number                      " Display line numbers
set report=0                    " Always report how many lines are changed
set scrolloff=4                 " Keep cursor 4 lines away form window edges
set shiftround                  " Round indent to multiple of 'shiftwidth'
set shiftwidth=4                " >> indents 4 columns; << unindents 4 columns
set showcmd                     " Show command in bottom bar
set showtabline=2               " Always show the tabline
set softtabstop=4               " Insert/delete 4 spaces when hitting TAB/BACKSPACE
set splitbelow                  " New window is placed below the current one
set splitright                  " New window is placed to the right of the current one
set tabstop=4                   " A hard TAB displays as 4 columns
set ttyfast                     " Better terminal performance
set wildmenu                    " Extend tab-completion with interactive menu
set ignorecase                  " Case-insensitive searching
set smartcase                   " Case-sensitive searching only when including capitcals. Requries 'ignorecase'
set wildmode=longest,list,full  " Sensible tab-completion behavior

set textwidth=100

set splitright
set splitbelow
set report=0
set belloff=all


" Remove trailing whitespaces when saving
autocmd BufWritePre * :%s/\s\+$//ge

" Remove empty lines at the end of file when saving (needs some tweaking)
" autocmd BufWritePre * :%s#\($\n\s*\)\+\%$##

" autocmd FileType html :setlocal sw=2 ts=2 sts=2 " Two spaces for HTML files

" Use Markdown syntax highlighting for .md-files
autocmd BufNewFile,BufRead *.md set syntax=markdown

" Key bindings ===============================================================

let mapleader = ","

" space open/closes folds
nnoremap <space> za

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" kj is escape
inoremap kj <Esc>

" move to beginning/end of line
noremap H ^
noremap L $

" Easier split navigation
nnoremap <C-H> <C-W><C-H>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>

" Cycle through tabs like in firefox
map <C-n> :tabn<CR>
map <C-p> :tabp<CR>

" Keep selection after changing indent level
vnoremap > ><CR>gv
vnoremap < <<CR>gv

" TODO Collides with split navigation
" nnoremap <silent> <C-l> :<C-u>nohlsearch<CR><C-l>


" Edit vimr configuration file
nnoremap <Leader>ve :e $MYVIMRC<CR>
" " Reload vimr configuration file
nnoremap <Leader>vr :source $MYVIMRC<CR>

" Netrw ======================================================================

let g:netrw_banner=0
let g:netrw_altv=1
let g:netrw_liststyle=3

" Vimwiki ====================================================================

:nmap <Leader>d <Plug>VimwikiMakeDiaryNote
let g:vimwiki_folding = 'list:quick'

" NERDTree ===================================================================

" map <C-n> :NERDTreeToggle<CR>
" map <C-a> :NERDTreeFocus<CR>

" Vim Airline ================================================================

" let g:airline_extensions = ['tabline', 'whitespace']
" let g:airline_symbols_ascii = 1
" let g:airline_detect_modified=1
" let g:airline_inactive_collapse=1
" let g:airline_theme='jellybeans'

" rust.vim ====================================================================
"
" let g:rustfmt_autosave = 1

" Syntastic ===================================================================
"
" set statusline+=%#warningmsg#
" set statusline+=%{SyntasticStatuslineFlag()}
" set statusline+=%*

" let g:syntastic_always_populate_loc_list = 1
" let g:syntastic_auto_loc_list = 1
" let g:syntastic_check_on_open = 0
" let g:syntastic_check_on_wq = 0

" let g:syntastic_python_checkers = ['flake8', 'pylint']

" " TODO These dont work properly
" let g:syntastic_javascript_checkers = ['eslint']
" let g:syntastic_javascript_eslint_exe = 'npx eslint --'
